/*
Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.
*/

/*
Analysis: This feels exactly the same as Problem 242. Valid Anagram. We use a hash table to record the count of each character.

Time: O(n), Space: O(1).
*/
class Solution {
public:
    char findTheDifference(string s, string t) {
        vector<int> ht(26, 0);
        for (char c : s) ht[c-'a']++;
        for (char c : t) {
            if (--ht[c-'a'] < 0) return c;
        }
    }
};

/*
Analysis: Another way to think about it that, t is s permuated plus a number. We do not careful about exactly which index the added number is at, just the value of the number. Therefore s+t gives 2n+1 characters, exactly the same set up as Problem 136. Single Number.

Bit manipulation. Time: O(n), Space: O(1).
*/
class Solution {
public:
    char findTheDifference(string s, string t) {
        char res = 0;
        for (char c : s) res ^= c;
        for (char c : t) res ^= c;
        return res;
    }
};
